generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                Int          @id @default(autoincrement())
  fullname          String
  password_hash     String?
  githubId          Int?         @unique
  googleId          String?      @unique
  sessions          Session[]
  email             String?      @unique
  avatarUrl         String?
  createdAt         DateTime     @default(now())
  updatedAt         DateTime     @updatedAt
  createdWorkspaces Workspaces[] @relation("WorkspaceCreator")
  members           Member[]
}

model Workspaces {
  id        String     @id @default(cuid())
  name      String
  userId    Int
  creator   User       @relation("WorkspaceCreator", fields: [creatorId], references: [id])
  creatorId Int
  joinCode  String
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  members   Member[]
  Channels  Channels[]
}

model Session {
  id        String   @id
  userId    Int
  expiresAt DateTime

  user User @relation(references: [id], fields: [userId], onDelete: Cascade)
}

model Member {
  id          Int        @id @default(autoincrement())
  role        Role
  joinedAt    DateTime   @default(now())
  user        User       @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId      Int
  workspace   Workspaces @relation(fields: [workspaceId], references: [id], onDelete: Cascade)
  workspaceId String

  @@unique([userId, workspaceId])
}

enum Role {
  ADMIN
  MEMBER
}

model Channels {
  id           String     @id @default(cuid())
  name         String
  workspace    Workspaces @relation(fields: [workspaceId], references: [id], onDelete: Cascade)
  workspaceId String
}
